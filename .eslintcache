[{"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\utils\\setAuthToken.js":"3","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\store.js":"4","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\routing\\Routing.js":"5","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\routing\\PrivateRoute.js":"6","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\pages\\Dashboard\\Dashboard.js":"7","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\pages\\Auth\\UserAuth.js":"8","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\reducers\\index.js":"9","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Auth\\Login.js":"10","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Auth\\Register.js":"11","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\actions\\auth.js":"12","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\constants\\auth.js":"13","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\reducers\\auth.js":"14","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\actions\\aquariums.js":"15","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\constants\\aquariums.js":"16","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\reducers\\aquariums.js":"17","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Cards\\AquariumCard.js":"18","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Cards\\Card-Sections\\Inventory.js":"19","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddAquarium.js":"20","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\utils\\jsonHeader.js":"21","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddInventory.js":"22","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\InventoryItemDetails.js":"23","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Sections\\AquariumsGeneral.js":"24","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\EditAquarium.js":"25","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Sections\\Maintenance.js":"26","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Cards\\MaintenanceCard.js":"27","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Notifications\\MaintenanceWarning.js":"28","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddMaintenance.js":"29","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddWaterchange.js":"30","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddParameterCheck.js":"31","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\DeleteAquariums.js":"32","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Sections\\Inventory.js":"33","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Tables\\InventoryTable.js":"34","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Sections\\WaterChanges.js":"35","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\ViewNotes.js":"36","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\constants\\maintenance.js":"37","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Sections\\ParameterChecks.js":"38","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Sections\\MaintenanceTasks.js":"39","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Typography\\Header.js":"40","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Tables\\SectionTable.js":"41","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\ButtonGroups\\Pagination.js":"42","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\ShowAllRecords.js":"43","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\EditInventoryModal.js":"44","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Navigation\\Navbar.js":"45","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\pages\\NotFound\\NotFound.js":"46","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Cards\\Card-Sections\\Reminders.js":"47","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\reducers\\alert.js":"48","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\constants\\alerts.js":"49","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\actions\\alerts.js":"50","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Alerts\\Alert.js":"51"},{"size":219,"mtime":1608703900292,"results":"52","hashOfConfig":"53"},{"size":655,"mtime":1610063534229,"results":"54","hashOfConfig":"53"},{"size":253,"mtime":1608702485463,"results":"55","hashOfConfig":"53"},{"size":399,"mtime":1608702661990,"results":"56","hashOfConfig":"53"},{"size":755,"mtime":1610227665250,"results":"57","hashOfConfig":"53"},{"size":732,"mtime":1610069852419,"results":"58","hashOfConfig":"53"},{"size":1990,"mtime":1610063943337,"results":"59","hashOfConfig":"53"},{"size":319,"mtime":1610353406421,"results":"60","hashOfConfig":"53"},{"size":201,"mtime":1610352485731,"results":"61","hashOfConfig":"53"},{"size":2974,"mtime":1610360305241,"results":"62","hashOfConfig":"53"},{"size":3617,"mtime":1610360529756,"results":"63","hashOfConfig":"53"},{"size":2520,"mtime":1610361073751,"results":"64","hashOfConfig":"53"},{"size":448,"mtime":1608703317367,"results":"65","hashOfConfig":"53"},{"size":1384,"mtime":1608703838437,"results":"66","hashOfConfig":"53"},{"size":7309,"mtime":1612127955440,"results":"67","hashOfConfig":"53"},{"size":784,"mtime":1609023194555,"results":"68","hashOfConfig":"53"},{"size":5089,"mtime":1612128397157,"results":"69","hashOfConfig":"53"},{"size":1054,"mtime":1610424255350,"results":"70","hashOfConfig":"53"},{"size":2090,"mtime":1610424245901,"results":"71","hashOfConfig":"53"},{"size":5454,"mtime":1610419113179,"results":"72","hashOfConfig":"53"},{"size":94,"mtime":1608702494040,"results":"73","hashOfConfig":"53"},{"size":6504,"mtime":1610424131129,"results":"74","hashOfConfig":"53"},{"size":1623,"mtime":1609459792822,"results":"75","hashOfConfig":"53"},{"size":1575,"mtime":1610364074203,"results":"76","hashOfConfig":"53"},{"size":6069,"mtime":1610403976204,"results":"77","hashOfConfig":"53"},{"size":1382,"mtime":1610409566171,"results":"78","hashOfConfig":"53"},{"size":4212,"mtime":1610424627192,"results":"79","hashOfConfig":"53"},{"size":462,"mtime":1608872713560,"results":"80","hashOfConfig":"53"},{"size":2542,"mtime":1612144474262,"results":"81","hashOfConfig":"53"},{"size":2380,"mtime":1610406555262,"results":"82","hashOfConfig":"53"},{"size":4000,"mtime":1610406632247,"results":"83","hashOfConfig":"53"},{"size":2215,"mtime":1610053237205,"results":"84","hashOfConfig":"53"},{"size":3111,"mtime":1610088440855,"results":"85","hashOfConfig":"53"},{"size":1298,"mtime":1609750117588,"results":"86","hashOfConfig":"53"},{"size":2692,"mtime":1612143646437,"results":"87","hashOfConfig":"53"},{"size":626,"mtime":1609296513603,"results":"88","hashOfConfig":"53"},{"size":147,"mtime":1609205555095,"results":"89","hashOfConfig":"53"},{"size":2966,"mtime":1612143622835,"results":"90","hashOfConfig":"53"},{"size":2733,"mtime":1612143933144,"results":"91","hashOfConfig":"53"},{"size":209,"mtime":1609744108958,"results":"92","hashOfConfig":"53"},{"size":2412,"mtime":1610072036054,"results":"93","hashOfConfig":"53"},{"size":683,"mtime":1609447827642,"results":"94","hashOfConfig":"53"},{"size":691,"mtime":1609459644218,"results":"95","hashOfConfig":"53"},{"size":7283,"mtime":1610400498845,"results":"96","hashOfConfig":"53"},{"size":984,"mtime":1610261561653,"results":"97","hashOfConfig":"53"},{"size":309,"mtime":1610227559561,"results":"98","hashOfConfig":"53"},{"size":171,"mtime":1610261168853,"results":"99","hashOfConfig":"53"},{"size":1353,"mtime":1610419350561,"results":"100","hashOfConfig":"53"},{"size":131,"mtime":1610399282115,"results":"101","hashOfConfig":"53"},{"size":343,"mtime":1610399350406,"results":"102","hashOfConfig":"53"},{"size":407,"mtime":1610355046306,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"jm1eg0",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"106"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"106"},"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\index.js",[],["225","226"],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\App.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\utils\\setAuthToken.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\store.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\routing\\Routing.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\routing\\PrivateRoute.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\pages\\Dashboard\\Dashboard.js",["227"],"import React, { useEffect } from \"react\";\r\nimport { Container, Tab, Tabs } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getAquariums } from \"../../redux/actions/aquariums\";\r\nimport { loadUser } from \"../../redux/actions/auth\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport AquariumsGeneral from \"../../components/Sections/AquariumsGeneral\";\r\nimport Maintenance from \"../../components/Sections/Maintenance\";\r\nimport Inventory from \"../../components/Sections/Inventory\";\r\nimport WaterChanges from \"../../components/Sections/WaterChanges\";\r\nimport ParameterChecks from \"../../components/Sections/ParameterChecks\";\r\nimport MaintenanceTasks from \"../../components/Sections/MaintenanceTasks\";\r\n\r\nconst Dashboard = ({ getAquariums, loadUser, loading }) => {\r\n  useEffect(() => {\r\n    loadUser();\r\n    getAquariums();\r\n  }, []);\r\n  return (\r\n    <Container className=\"pt-4\">\r\n      {!loading && (\r\n        <Tabs defaultActiveKey=\"aquariums\" id=\"dashboard-tabs\">\r\n          <Tab eventKey=\"aquariums\" title=\"Aquariums\">\r\n            <AquariumsGeneral />\r\n          </Tab>\r\n          <Tab eventKey=\"maintenance\" title=\"Maintenance\">\r\n            <Maintenance />\r\n          </Tab>\r\n          <Tab eventKey=\"inventory\" title=\"Inventory\">\r\n            <Inventory />\r\n          </Tab>\r\n          <Tab eventKey=\"waterchanges\" title=\"Water Changes\">\r\n            <WaterChanges />\r\n          </Tab>\r\n          <Tab eventKey=\"parameters\" title=\"Parameters\">\r\n            <ParameterChecks />\r\n          </Tab>\r\n          <Tab eventKey=\"generalMaintenance\" title=\"Maintenance Tasks\">\r\n            <MaintenanceTasks />\r\n          </Tab>\r\n        </Tabs>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getAquariums: PropTypes.func.isRequired,\r\n  loadUser: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loading: state.aquariums.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAquariums,\r\n  loadUser,\r\n})(Dashboard);\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\pages\\Auth\\UserAuth.js",["228","229","230"],"import React, { useEffect, useState } from \"react\";\r\nimport Login from \"../../components/Auth/Login\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst UserAuth = () => {\r\n  return (\r\n    <Container>\r\n      <Login />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserAuth;\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\reducers\\index.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Auth\\Login.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Auth\\Register.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\actions\\auth.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\constants\\auth.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\reducers\\auth.js",["231"],"import {\r\n  REGISTER_START,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_START,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  AUTH_ERROR,\r\n  USER_LOADED,\r\n  LOGOUT,\r\n} from \"../constants/auth\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: false,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_START:\r\n    case LOGIN_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n\r\n    case REGISTER_FAIL:\r\n    case LOGIN_FAIL:\r\n    case AUTH_ERROR:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        user: payload,\r\n      };\r\n\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"user\");\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\actions\\aquariums.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\constants\\aquariums.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\reducers\\aquariums.js",["232"],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Cards\\AquariumCard.js",["233","234"],"import React from \"react\";\r\nimport { Card, Col, Row } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport Inventory from \"./Card-Sections/Inventory\";\r\nimport EditAquarium from \"../Modals/EditAquarium\";\r\nimport DeleteAquariums from \"../Modals/DeleteAquariums\";\r\nimport Reminders from \"./Card-Sections/Reminders\";\r\n\r\nconst AquariumCard = ({ aquarium, livestock, plants }) => {\r\n  return (\r\n    <Col md={{ span: 4 }}>\r\n      <Card className=\"light-box-shadow row-spacing__large\">\r\n        <Card.Body>\r\n          <h5 className=\"_text-subtitle skinny\">{aquarium.name}</h5>{\" \"}\r\n          <Inventory\r\n            type=\"livestock\"\r\n            data={livestock}\r\n            aquariumId={aquarium._id}\r\n          />\r\n          <Inventory type=\"plants\" data={plants} aquariumId={aquarium._id} />\r\n          <EditAquarium aquarium={aquarium} />{\" \"}\r\n          <DeleteAquariums aquarium={aquarium} />\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nAquariumCard.propTypes = {};\r\n\r\nexport default connect(null, {})(AquariumCard);\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Cards\\Card-Sections\\Inventory.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddAquarium.js",["235"],"import React, { useState } from \"react\";\r\nimport { Modal, Form, Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleAlert } from \"../../redux/actions/alerts\";\r\n\r\nimport AlertBar from \"../../components/Alerts/Alert\";\r\n\r\nconst AddAquarium = ({ addAquarium, handleAlert, addAquariumAlert }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    size: 1,\r\n    parameterCheckReminder: 7,\r\n    waterchangeReminder: 7,\r\n    generalMaintenanceReminder: 7,\r\n  });\r\n\r\n  const {\r\n    name,\r\n    description,\r\n    waterchangeReminder,\r\n    parameterCheckReminder,\r\n    generalMaintenanceReminder,\r\n  } = formData;\r\n\r\n  const reminderOptions = [1, 3, 5, 7, 14, 21, 28];\r\n  const reminderText = [\r\n    \"Daily\",\r\n    \"Every 3 Days\",\r\n    \"Every 5 Days\",\r\n    \"Weekly\",\r\n    \"Every 2 Weeks\",\r\n    \"Every 3 Weeks\",\r\n    \"Once a Month\",\r\n  ];\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let fieldEmpty = false;\r\n    Object.keys(formData).map((item) => {\r\n      if (formData[item].length === 0) {\r\n        fieldEmpty = true;\r\n      }\r\n    });\r\n\r\n    if (fieldEmpty) {\r\n      return handleAlert(\r\n        \"Please fill out all fields\",\r\n        \"danger\",\r\n        \"addAquariumAlert\"\r\n      );\r\n    }\r\n    addAquarium(formData);\r\n    handleClose();\r\n  };\r\n  const changeHandler = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span className=\"text-primary pointer\" onClick={handleShow}>\r\n        +\r\n      </span>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Aquarium</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={(e) => handleSubmit(e)}>\r\n            {addAquariumAlert && <AlertBar />}\r\n            <Form.Group controlId={`addAquariumName`}>\r\n              <p className=\"_text-medium semi-bold m-0\">Info</p>\r\n              <Form.Label className=\"mt-2\">Name</Form.Label>\r\n              <Form.Control\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter name for this aquarium\"\r\n                value={name}\r\n                onChange={(e) => changeHandler(e)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId={`addAquariumDescription`}>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                name=\"description\"\r\n                placeholder=\"Enter description\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                value={description}\r\n                onChange={(e) => changeHandler(e)}\r\n              />\r\n            </Form.Group>\r\n            <p className=\"_text-medium bold m-0 pt-3\">Maintenance</p>\r\n            <Form.Group controlId={`addAquariumDescription`}>\r\n              <Form.Label className=\"mt-2\">Water Change Schedule</Form.Label>\r\n              <Form.Control\r\n                name=\"waterchangeReminder\"\r\n                type=\"text\"\r\n                as=\"select\"\r\n                value={waterchangeReminder}\r\n                onChange={(e) => changeHandler(e)}\r\n              >\r\n                {reminderOptions.map((option, index) => (\r\n                  <option key={`waterchangeReminder${option}`} value={option}>\r\n                    {reminderText[index]}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId={`addAquariumDescription`}>\r\n              <Form.Label>Parameter Check Schedule</Form.Label>\r\n              <Form.Control\r\n                name=\"parameterCheckReminder\"\r\n                type=\"text\"\r\n                as=\"select\"\r\n                value={parameterCheckReminder}\r\n                onChange={(e) => changeHandler(e)}\r\n              >\r\n                {reminderOptions.map((option, index) => (\r\n                  <option\r\n                    key={`parameterCheckReminder${option}`}\r\n                    value={option}\r\n                  >\r\n                    {reminderText[index]}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId={`addAquariumDescription`}>\r\n              <Form.Label>General Maintenance Schedule</Form.Label>\r\n              <Form.Control\r\n                name=\"generalMaintenanceReminder\"\r\n                type=\"text\"\r\n                as=\"select\"\r\n                value={generalMaintenanceReminder}\r\n                onChange={(e) => changeHandler(e)}\r\n              >\r\n                {reminderOptions.map((option, index) => (\r\n                  <option\r\n                    key={`generalMaintenanceReminder${option}`}\r\n                    value={option}\r\n                  >\r\n                    {reminderText[index]}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" className=\"mt-4\" type=\"submit\">\r\n              Save Changes\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  addAquariumAlert: state.alert.addAquariumAlert,\r\n});\r\nexport default connect(mapStateToProps, { handleAlert })(AddAquarium);\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\utils\\jsonHeader.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddInventory.js",["236"],"import React, { useState } from \"react\";\r\n\r\nimport { Modal, Form, Button, Col } from \"react-bootstrap\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { handleAlert } from \"../../redux/actions/alerts\";\r\nimport AlertBar from \"../../components/Alerts/Alert\";\r\n\r\nconst AddInventory = ({\r\n  aquariumId,\r\n  submit,\r\n  property,\r\n  handleAlert,\r\n  addInventoryAlert,\r\n}) => {\r\n  const [show, setShow] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: 1.99,\r\n    quantity: 1,\r\n  });\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const { name, description, quantity, price } = formData;\r\n\r\n  const changeHandler = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let fieldEmpty = false;\r\n    Object.keys(formData).map((item) => {\r\n      if (formData[item].length === 0) {\r\n        fieldEmpty = true;\r\n      }\r\n    });\r\n\r\n    if (fieldEmpty) {\r\n      return handleAlert(\r\n        \"Please fill out all fields\",\r\n        \"danger\",\r\n        \"addInventoryAlert\"\r\n      );\r\n    }\r\n    handleClose();\r\n    submit(aquariumId, formData);\r\n  };\r\n\r\n  const subtractQuantity = (amount, type) => {\r\n    const minValue = type === \"price\" ? 0.09 : 1;\r\n    if (formData[type] <= amount) {\r\n      setFormData({ ...formData, [type]: minValue });\r\n      return;\r\n    }\r\n\r\n    let newData = formData[type] - amount;\r\n    if (type === \"price\") {\r\n      let num = formData[type] * 1;\r\n      const sum = num - amount;\r\n      newData = sum.toFixed(2);\r\n    }\r\n\r\n    setFormData({ ...formData, [type]: newData });\r\n  };\r\n\r\n  const addQuantity = (amount, type) => {\r\n    let newData = formData[type] + amount;\r\n    if (type === \"price\") {\r\n      let num = formData[type] * 1;\r\n      const sum = num + amount;\r\n      newData = sum.toFixed(2);\r\n    }\r\n\r\n    setFormData({ ...formData, [type]: newData });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span className=\"_text-small barlow pointer\" onClick={handleShow}>\r\n        +add\r\n      </span>\r\n\r\n      <Modal show={show} onHide={handleClose} className=\"text-center\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add {property}</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body className=\"text-center\">\r\n          <Col>\r\n            <Form onSubmit={(e) => submitHandler(e)}>\r\n              {addInventoryAlert && <AlertBar />}\r\n              <Form.Group controlId={`add${property}Quantity`}>\r\n                <Form.Label>Quantity</Form.Label>\r\n                <Form.Text className=\"d-flex align-items-center justify-content-center\">\r\n                  <span\r\n                    onClick={() => subtractQuantity(10, \"quantity\")}\r\n                    className=\"m-1 _text-subtitle mr-4 bold pointer\"\r\n                  >\r\n                    -\r\n                  </span>\r\n                  <small\r\n                    onClick={() => subtractQuantity(1, \"quantity\")}\r\n                    className=\"m-1 _text-medium pointer mr-4\"\r\n                  >\r\n                    -\r\n                  </small>\r\n                  <h3 className=\"m-2 _text-subtitle\">{quantity}</h3>\r\n\r\n                  <small\r\n                    onClick={() => addQuantity(1, \"quantity\")}\r\n                    className=\"m-1 _text-medium ml-4 pointer\"\r\n                  >\r\n                    +\r\n                  </small>\r\n\r\n                  <span\r\n                    onClick={() => addQuantity(10, \"quantity\")}\r\n                    className=\"m-1 _text-subtitle ml-4 bold pointer mt-2\"\r\n                  >\r\n                    +\r\n                  </span>\r\n                </Form.Text>\r\n              </Form.Group>\r\n              <Form.Group controlId={`addAquariumSize`}>\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Text className=\"d-flex align-items-center justify-content-center\">\r\n                  <span\r\n                    onClick={() => subtractQuantity(1.0, \"price\")}\r\n                    className=\"m-1 mr-4 _text-subtitle bold pointer\"\r\n                  >\r\n                    -\r\n                  </span>\r\n                  <small\r\n                    onClick={() => subtractQuantity(0.1, \"price\")}\r\n                    className=\"m-1 mr-4 _text-medium pointer\"\r\n                  >\r\n                    -\r\n                  </small>\r\n                  <h3 className=\"_text-subtitle\">${price}</h3>\r\n\r\n                  <small\r\n                    onClick={() => addQuantity(0.1, \"price\")}\r\n                    className=\"m-1 ml-4 _text-medium pointer\"\r\n                  >\r\n                    +\r\n                  </small>\r\n\r\n                  <span\r\n                    onClick={() => addQuantity(1.0, \"price\")}\r\n                    className=\"m-1 ml-4 _text-subtitle bold pointer mt-2\"\r\n                  >\r\n                    +\r\n                  </span>\r\n                </Form.Text>\r\n              </Form.Group>\r\n              <Form.Group\r\n                controlId={`add${property}Name`}\r\n                className=\"text-left\"\r\n              >\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Name\"\r\n                  value={name}\r\n                  onChange={(e) => changeHandler(e)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group\r\n                controlId={`add${property}SciName`}\r\n                className=\"text-left\"\r\n              >\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  name=\"description\"\r\n                  type=\"text\"\r\n                  as=\"textarea\"\r\n                  placeholder=\"Description\"\r\n                  onChange={(e) => changeHandler(e)}\r\n                  value={description}\r\n                />\r\n              </Form.Group>\r\n              <div className=\"text-left\">\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Add\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nAddInventory.propTypes = {\r\n  handleAlert: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  addInventoryAlert: state.alert.addInventoryAlert,\r\n});\r\n\r\nexport default connect(mapStateToProps, { handleAlert })(AddInventory);\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\InventoryItemDetails.js",[],["237","238"],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Sections\\AquariumsGeneral.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\EditAquarium.js",["239"],"import React, { useState } from \"react\";\r\nimport { Modal, Form, Button } from \"react-bootstrap\";\r\nimport AlertBar from \"../Alerts/Alert\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { editAquarium } from \"../../redux/actions/aquariums\";\r\nimport { handleAlert } from \"../../redux/actions/alerts\";\r\n\r\nconst EditAquarium = ({\r\n  aquarium,\r\n  editAquarium,\r\n  handleAlert,\r\n  editAquariumAlert,\r\n}) => {\r\n  const [show, setShow] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: aquarium.name,\r\n    size: aquarium.size,\r\n    description: aquarium.description,\r\n    parameterCheckReminder: aquarium.parameterCheckReminder,\r\n    waterchangeReminder: aquarium.waterchangeReminder,\r\n    generalMaintenanceReminder: aquarium.generalMaintenanceReminder,\r\n  });\r\n\r\n  const reminderOptions = [1, 3, 5, 7, 14, 21, 28];\r\n  const reminderText = [\r\n    \"Daily\",\r\n    \"Every 3 Days\",\r\n    \"Every 5 Days\",\r\n    \"Weekly\",\r\n    \"Every 2 Weeks\",\r\n    \"Every 3 Weeks\",\r\n    \"Once a Month\",\r\n  ];\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let fieldEmpty = false;\r\n    Object.keys(formData).map((item) => {\r\n      if (formData[item].length === 0) {\r\n        fieldEmpty = true;\r\n      }\r\n    });\r\n\r\n    if (fieldEmpty) {\r\n      return handleAlert(\r\n        \"Please fill out all fields\",\r\n        \"danger\",\r\n        \"editAquariumAlert\"\r\n      );\r\n    }\r\n    editAquarium(formData, aquarium._id);\r\n    handleClose();\r\n  };\r\n  const changeHandler = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const {\r\n    name,\r\n    description,\r\n    waterchangeReminder,\r\n    parameterCheckReminder,\r\n    generalMaintenanceReminder,\r\n  } = formData;\r\n  return (\r\n    <>\r\n      <Button\r\n        size=\"sm\"\r\n        variant=\"info\"\r\n        className=\"light-box-shadow\"\r\n        onClick={handleShow}\r\n      >\r\n        <i className=\"fas fa-pencil-alt\"></i>\r\n      </Button>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Aquarium</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={(e) => handleSubmit(e)}>\r\n            {editAquariumAlert && <AlertBar />}\r\n            <Form.Group controlId={`addAquariumName`}>\r\n              <p className=\"_text-subtitle m-0\">Info</p>\r\n              <Form.Label className=\"semi-bold\">Name</Form.Label>\r\n              <Form.Control\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter name for this aquarium\"\r\n                value={name}\r\n                onChange={(e) => changeHandler(e)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId={`addAquariumDescription`}>\r\n              <Form.Label className=\"semi-bold\">Description</Form.Label>\r\n              <Form.Control\r\n                name=\"description\"\r\n                placeholder=\"Enter description\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                value={description}\r\n                onChange={(e) => changeHandler(e)}\r\n              />\r\n            </Form.Group>\r\n            <p className=\"_text-subtitle m-0 pt-3\">Maintenance</p>\r\n            <Form.Group controlId={`addAquariumDescription`}>\r\n              <Form.Label className=\"semi-bold\">\r\n                Water Change Schedule\r\n              </Form.Label>\r\n              <Form.Control\r\n                name=\"waterchangeReminder\"\r\n                type=\"text\"\r\n                as=\"select\"\r\n                value={waterchangeReminder}\r\n                onChange={(e) => changeHandler(e)}\r\n              >\r\n                {reminderOptions.map((option, index) => (\r\n                  <option key={`waterchangeReminder${option}`} value={option}>\r\n                    {reminderText[index]}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId={`addAquariumDescription`}>\r\n              <Form.Label className=\"semi-bold\">\r\n                Parameter Check Schedule\r\n              </Form.Label>\r\n              <Form.Control\r\n                name=\"parameterCheckReminder\"\r\n                type=\"text\"\r\n                as=\"select\"\r\n                value={parameterCheckReminder}\r\n                onChange={(e) => changeHandler(e)}\r\n              >\r\n                {reminderOptions.map((option, index) => (\r\n                  <option\r\n                    key={`parameterCheckReminder${option}`}\r\n                    value={option}\r\n                  >\r\n                    {reminderText[index]}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId={`addAquariumDescription`}>\r\n              <Form.Label className=\"semi-bold\">\r\n                General Maintenance Schedule\r\n              </Form.Label>\r\n              <Form.Control\r\n                name=\"generalMaintenanceReminder\"\r\n                type=\"text\"\r\n                as=\"select\"\r\n                value={generalMaintenanceReminder}\r\n                onChange={(e) => changeHandler(e)}\r\n              >\r\n                {reminderOptions.map((option, index) => (\r\n                  <option\r\n                    key={`generalMaintenanceReminder${option}`}\r\n                    value={option}\r\n                  >\r\n                    {reminderText[index]}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save Changes\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nEditAquarium.propTypes = {\r\n  editAquarium: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  editAquariumAlert: state.alert.editAquariumAlert,\r\n});\r\n\r\nexport default connect(mapStateToProps, { editAquarium, handleAlert })(\r\n  EditAquarium\r\n);\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Sections\\Maintenance.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Cards\\MaintenanceCard.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Notifications\\MaintenanceWarning.js",[],["240","241"],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddMaintenance.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddWaterchange.js",["242"],"import React, { useState } from \"react\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AddWaterchange = ({ addMaintenanceEvent, aquariumId }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    percentChange: 50,\r\n    notes: \"\",\r\n  });\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const { percentChange, notes } = formData;\r\n\r\n  const changeHandler = (e) => {\r\n    console.log(formData);\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    handleClose();\r\n    addMaintenanceEvent(aquariumId, formData, \"waterchanges\");\r\n  };\r\n\r\n  const options = [5, 10, 20, 25, 30, 40, 50, 75, 90];\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleShow} className=\"light-box-shadow\">\r\n        <i className=\"fas fa-faucet\"></i>\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Water Change</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Form onSubmit={(e) => submitHandler(e)}>\r\n            <Form.Group controlId={`addWaterchangePercent`}>\r\n              <Form.Label>Percent Changed</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                name=\"percentChange\"\r\n                value={percentChange}\r\n                onChange={(e) => changeHandler(e)}\r\n              >\r\n                <option></option>\r\n                {options.map((option, index) => (\r\n                  <option key={`percentChange${option}`} value={option}>\r\n                    {option}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId={`addWaterchangeNotes`}>\r\n              <Form.Label>Notes (optional)</Form.Label>\r\n              <Form.Control\r\n                name=\"notes\"\r\n                as=\"textarea\"\r\n                value={notes}\r\n                onChange={(e) => changeHandler(e)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Add\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddWaterchange;\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddParameterCheck.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\DeleteAquariums.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Sections\\Inventory.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Tables\\InventoryTable.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Sections\\WaterChanges.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\ViewNotes.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\constants\\maintenance.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Sections\\ParameterChecks.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Sections\\MaintenanceTasks.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Typography\\Header.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Tables\\SectionTable.js",["243","244"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Col, Row } from \"react-bootstrap\";\r\n\r\nconst SectionTable = ({ aquariumId, aquariumName, route, fields, limit }) => {\r\n  const [responseData, setResponseData] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [flag, setFlag] = useState(false);\r\n\r\n  if (!limit || limit.length === 0) {\r\n    limit = 5;\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://aquatrack-api-v1.herokuapp.com/api/v1/aquariums/${aquariumId}/${route}?limit=${limit}&page=${page}`\r\n      )\r\n      .then((res) => {\r\n        setResponseData(res.data);\r\n        console.log(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, [page, flag]);\r\n  return (\r\n    <Col xs={{ span: 12 }} md={{ span: 9 }}>\r\n      {responseData.data && (\r\n        <>\r\n          <Row>\r\n            <Col xs={{ span: 6 }}>\r\n              <p className=\"_text-subtitle skinny\">\r\n                {aquariumName}\r\n                <span\r\n                  className=\"_text-small ml-2\"\r\n                  onClick={() => setFlag(!flag)}\r\n                >\r\n                  <i className=\"fas fa-redo\"></i>\r\n                </span>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Table size=\"sm\" className=\"light-box-shadow\" striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                {fields.labels.map((field, idx) => {\r\n                  return <th key={`${field}__${idx}`}>{field}</th>;\r\n                })}\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {responseData.data.length ? (\r\n                responseData.data.map((item) => {\r\n                  const date = new Date(item.createdAt);\r\n                  return (\r\n                    <tr key={item._id}>\r\n                      <td>{date.toDateString()}</td>\r\n                      {fields.formdata.map((field) => {\r\n                        return <td key={field}>{item[field]}</td>;\r\n                      })}\r\n                    </tr>\r\n                  );\r\n                })\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan={fields.labels.length + 1}>No history</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </>\r\n      )}\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default SectionTable;\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\ButtonGroups\\Pagination.js",[],["245","246"],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\ShowAllRecords.js",["247","248","249"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Modal, Row } from \"react-bootstrap\";\r\n\r\nconst ShowAllRecords = ({ url }) => {\r\n  const [responseData, setResponseData] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(url)\r\n      .then((res) => setResponseData(res.data))\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <span onClick={handleShow}>Notes</span>\r\n      <Modal show={show} onHide={handleClose}></Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowAllRecords;\r\n",["250","251"],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\EditInventoryModal.js",["252"],"import React, { useState } from \"react\";\r\nimport { Modal, Form, Button, Badge } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleAlert } from \"../../redux/actions/alerts\";\r\nimport PropTypes from \"prop-types\";\r\nimport AlertBar from \"../../components/Alerts/Alert\";\r\n\r\nconst EditInventory = ({\r\n  item,\r\n  submit,\r\n  btnvariant,\r\n  deleteFn,\r\n  handleAlert,\r\n  editInventoryAlert,\r\n}) => {\r\n  const [show, setShow] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: item.name,\r\n    description: item.description,\r\n    quantity: item.quantity,\r\n    price: item.price,\r\n  });\r\n\r\n  const [confirmTriggered, toggleConfirm] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let fieldEmpty = false;\r\n    Object.keys(formData).map((item) => {\r\n      if (formData[item].length === 0) {\r\n        fieldEmpty = true;\r\n      }\r\n    });\r\n\r\n    if (fieldEmpty) {\r\n      return handleAlert(\r\n        \"Please fill out all fields\",\r\n        \"danger\",\r\n        \"editInventoryAlert\"\r\n      );\r\n    }\r\n    submit(formData, item._id);\r\n    handleClose();\r\n  };\r\n  const changeHandler = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const subtractQuantity = (amount, type) => {\r\n    const minValue = type === \"price\" ? 0.09 : 1;\r\n    if (formData[type] <= amount) {\r\n      setFormData({ ...formData, [type]: minValue });\r\n      return;\r\n    }\r\n\r\n    let newData = formData[type] - amount;\r\n    if (type === \"price\") {\r\n      let num = formData[type] * 1;\r\n      const sum = num - amount;\r\n      newData = sum.toFixed(2);\r\n    }\r\n\r\n    setFormData({ ...formData, [type]: newData });\r\n  };\r\n\r\n  const addQuantity = (amount, type) => {\r\n    let newData = formData[type] + amount;\r\n    if (type === \"price\") {\r\n      let num = formData[type] * 1;\r\n      const sum = num + amount;\r\n      newData = sum.toFixed(2);\r\n    }\r\n\r\n    setFormData({ ...formData, [type]: newData });\r\n  };\r\n\r\n  const { name, quantity, price, description } = formData;\r\n  return (\r\n    <>\r\n      <Button\r\n        variant={btnvariant}\r\n        className=\"mr-1 mt-1 mb-1 light-box-shadow\"\r\n        size=\"sm\"\r\n        key={item._id}\r\n        onClick={handleShow}\r\n      >\r\n        {item.name} <Badge variant=\"light\">{item.quantity}</Badge>\r\n      </Button>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Item </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-center\">\r\n          <Form onSubmit={(e) => handleSubmit(e)}>\r\n            {editInventoryAlert && <AlertBar />}\r\n            <Form.Group controlId={`editQuantity`}>\r\n              <Form.Label>Quantity</Form.Label>\r\n              <Form.Text className=\"d-flex align-items-center justify-content-center\">\r\n                <span\r\n                  onClick={() => subtractQuantity(10, \"quantity\")}\r\n                  className=\"m-1 _text-subtitle mr-4 semi-bold pointer\"\r\n                >\r\n                  -\r\n                </span>\r\n                <small\r\n                  onClick={() => subtractQuantity(1, \"quantity\")}\r\n                  className=\"m-1 _text-medium pointer mr-4\"\r\n                >\r\n                  -\r\n                </small>\r\n                <h3 className=\"m-2 _text-subtitle\">{quantity}</h3>\r\n\r\n                <small\r\n                  onClick={() => addQuantity(1, \"quantity\")}\r\n                  className=\"m-1 _text-medium ml-4 pointer\"\r\n                >\r\n                  +\r\n                </small>\r\n\r\n                <span\r\n                  onClick={() => addQuantity(10, \"quantity\")}\r\n                  className=\"m-1 _text-subtitle ml-4 semi-bold pointer mt-2\"\r\n                >\r\n                  +\r\n                </span>\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId={`addAquariumSize`}>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Text className=\"d-flex align-items-center justify-content-center\">\r\n                <span\r\n                  onClick={() => subtractQuantity(1.0, \"price\")}\r\n                  className=\"m-1 mr-4 _text-subtitle semi-bold pointer\"\r\n                >\r\n                  -\r\n                </span>\r\n                <small\r\n                  onClick={() => subtractQuantity(0.1, \"price\")}\r\n                  className=\"m-1 mr-4 _text-medium pointer\"\r\n                >\r\n                  -\r\n                </small>\r\n                <h3 className=\"_text-subtitle\">${price}</h3>\r\n\r\n                <small\r\n                  onClick={() => addQuantity(0.1, \"price\")}\r\n                  className=\"m-1 ml-4 _text-medium pointer\"\r\n                >\r\n                  +\r\n                </small>\r\n\r\n                <span\r\n                  onClick={() => addQuantity(1.0, \"price\")}\r\n                  className=\"m-1 ml-4 _text-subtitle semi-bold pointer mt-2\"\r\n                >\r\n                  +\r\n                </span>\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId={`editName`} className=\"text-left\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => changeHandler(e)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId={`editDescription`} className=\"text-left\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                name=\"description\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                placeholder=\"Description\"\r\n                onChange={(e) => changeHandler(e)}\r\n                value={description}\r\n              />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save Changes\r\n            </Button>\r\n            {confirmTriggered ? (\r\n              <>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  className=\"light-box-shadow ml-1\"\r\n                  onClick={() => toggleConfirm(false)}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  variant=\"danger\"\r\n                  className=\"light-box-shadow ml-1\"\r\n                  onClick={() => {\r\n                    deleteFn(item._id, item.aquarium);\r\n                    handleClose();\r\n                  }}\r\n                >\r\n                  Confirm\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <Button\r\n                variant=\"danger\"\r\n                className=\"light-box-shadow ml-1\"\r\n                onClick={() => toggleConfirm(true)}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nEditInventory.propTypes = {\r\n  handleAlert: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  editInventoryAlert: state.alert.editInventoryAlert,\r\n});\r\n\r\nexport default connect(mapStateToProps, { handleAlert })(EditInventory);\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Navigation\\Navbar.js",["253"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logout } from \"../../redux/actions/auth\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Navigation = ({ auth, logout }) => {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand href=\"#home\">AquaTrack</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          {auth.isAuthenticated && (\r\n            <Nav.Link href=\"/\" onClick={() => logout()}>\r\n              Logout\r\n            </Nav.Link>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nNavigation.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navigation);\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\pages\\NotFound\\NotFound.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Cards\\Card-Sections\\Reminders.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\reducers\\alert.js",["254"],"import { SHOW_ALERT, REMOVE_ALERT, RESET_ALERTS } from \"../constants/alerts\";\r\n\r\nconst initialState = {\r\n  loginAlert: false,\r\n  registerAlert: false,\r\n  addAquariumAlert: false,\r\n  editAquariumAlert: false,\r\n  aquariumSectionAlert: false,\r\n  editInventoryAlert: false,\r\n  addInventoryAlert: false,\r\n  addWaterchangeAlert: false,\r\n  addMaintenanceTaskAlert: false,\r\n  maintenanceSectionAlert: false,\r\n  msg: \"\",\r\n  variant: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case RESET_ALERTS:\r\n      return {\r\n        ...state,\r\n        loginAlert: false,\r\n        registerAlert: false,\r\n        addAquariumAlert: false,\r\n        aquariumSectionAlert: false,\r\n        editInventoryAlert: false,\r\n        addInventoryAlert: false,\r\n        addInventorySuccess: false,\r\n        editAquariumAlert: false,\r\n        addWaterchangeAlert: false,\r\n        maintenanceSectionAlert: false,\r\n        addMaintenanceTaskAlert: false,\r\n      };\r\n    case SHOW_ALERT:\r\n      return {\r\n        ...state,\r\n        [payload.alert]: true,\r\n        msg: payload.msg,\r\n        variant: payload.variant,\r\n      };\r\n    case REMOVE_ALERT:\r\n      return {\r\n        ...state,\r\n        [payload]: false,\r\n        msg: \"\",\r\n        variant: \"\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\constants\\alerts.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\actions\\alerts.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Alerts\\Alert.js",["255"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst AlertBar = ({ msg, variant }) => {\r\n  return <Alert variant={variant}>{msg}</Alert>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  msg: state.alert.msg,\r\n  variant: state.alert.variant,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(AlertBar);\r\n",{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","severity":1,"message":"261","line":19,"column":6,"nodeType":"262","endLine":19,"endColumn":8,"suggestions":"263"},{"ruleId":"264","severity":1,"message":"265","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"268","line":1,"column":28,"nodeType":"266","messageId":"267","endLine":1,"endColumn":36},{"ruleId":"264","severity":1,"message":"269","line":3,"column":10,"nodeType":"266","messageId":"267","endLine":3,"endColumn":17},{"ruleId":"270","severity":1,"message":"271","line":20,"column":1,"nodeType":"272","endLine":70,"endColumn":2},{"ruleId":"270","severity":1,"message":"271","line":26,"column":1,"nodeType":"272","endLine":196,"endColumn":2},{"ruleId":"264","severity":1,"message":"273","line":2,"column":21,"nodeType":"266","messageId":"267","endLine":2,"endColumn":24},{"ruleId":"264","severity":1,"message":"274","line":7,"column":8,"nodeType":"266","messageId":"267","endLine":7,"endColumn":17},{"ruleId":"275","severity":1,"message":"276","line":44,"column":38,"nodeType":"277","messageId":"278","endLine":44,"endColumn":40},{"ruleId":"275","severity":1,"message":"276","line":37,"column":38,"nodeType":"277","messageId":"278","endLine":37,"endColumn":40},{"ruleId":"256","replacedBy":"279"},{"ruleId":"258","replacedBy":"280"},{"ruleId":"275","severity":1,"message":"276","line":42,"column":38,"nodeType":"277","messageId":"278","endLine":42,"endColumn":40},{"ruleId":"256","replacedBy":"281"},{"ruleId":"258","replacedBy":"282"},{"ruleId":"264","severity":1,"message":"269","line":3,"column":10,"nodeType":"266","messageId":"267","endLine":3,"endColumn":17},{"ruleId":"264","severity":1,"message":"283","line":7,"column":16,"nodeType":"266","messageId":"267","endLine":7,"endColumn":23},{"ruleId":"260","severity":1,"message":"284","line":24,"column":6,"nodeType":"262","endLine":24,"endColumn":18,"suggestions":"285"},{"ruleId":"256","replacedBy":"286"},{"ruleId":"258","replacedBy":"287"},{"ruleId":"264","severity":1,"message":"273","line":3,"column":17,"nodeType":"266","messageId":"267","endLine":3,"endColumn":20},{"ruleId":"264","severity":1,"message":"288","line":6,"column":10,"nodeType":"266","messageId":"267","endLine":6,"endColumn":22},{"ruleId":"260","severity":1,"message":"289","line":16,"column":6,"nodeType":"262","endLine":16,"endColumn":8,"suggestions":"290"},{"ruleId":"256","replacedBy":"291"},{"ruleId":"258","replacedBy":"292"},{"ruleId":"275","severity":1,"message":"276","line":32,"column":38,"nodeType":"277","messageId":"278","endLine":32,"endColumn":40},{"ruleId":"264","severity":1,"message":"293","line":2,"column":10,"nodeType":"266","messageId":"267","endLine":2,"endColumn":14},{"ruleId":"270","severity":1,"message":"271","line":18,"column":1,"nodeType":"272","endLine":54,"endColumn":2},{"ruleId":"264","severity":1,"message":"294","line":2,"column":8,"nodeType":"266","messageId":"267","endLine":2,"endColumn":17},"no-native-reassign",["295"],"no-negated-in-lhs",["296"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAquariums' and 'loadUser'. Either include them or remove the dependency array. If 'loadUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["297"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'connect' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Row' is defined but never used.","'Reminders' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["295"],["296"],["295"],["296"],"'setPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'aquariumId', 'limit', and 'route'. Either include them or remove the dependency array.",["298"],["295"],["296"],"'responseData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["299"],["295"],["296"],"'Link' is defined but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},"Update the dependencies array to be: [getAquariums, loadUser]",{"range":"306","text":"307"},"Update the dependencies array to be: [page, flag, aquariumId, route, limit]",{"range":"308","text":"309"},"Update the dependencies array to be: [url]",{"range":"310","text":"311"},[846,848],"[getAquariums, loadUser]",[745,757],"[page, flag, aquariumId, route, limit]",[509,511],"[url]"]