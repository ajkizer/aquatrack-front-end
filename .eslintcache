[{"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\utils\\setAuthToken.js":"3","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\store.js":"4","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\routing\\Routing.js":"5","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\routing\\PrivateRoute.js":"6","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\pages\\Dashboard\\Dashboard.js":"7","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\pages\\Auth\\UserAuth.js":"8","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\reducers\\index.js":"9","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Auth\\Login.js":"10","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Auth\\Register.js":"11","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\actions\\auth.js":"12","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\constants\\auth.js":"13","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\reducers\\auth.js":"14","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\actions\\aquariums.js":"15","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\constants\\aquariums.js":"16","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\reducers\\aquariums.js":"17","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Cards\\AquariumCard.js":"18","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Cards\\Card-Sections\\Inventory.js":"19","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddAquarium.js":"20","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\utils\\jsonHeader.js":"21","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddInventory.js":"22","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\InventoryItemDetails.js":"23","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Sections\\AquariumsGeneral.js":"24","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\EditAquarium.js":"25","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Sections\\Maintenance.js":"26","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Cards\\MaintenanceCard.js":"27","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Notifications\\MaintenanceWarning.js":"28","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddMaintenance.js":"29","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddWaterchange.js":"30","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddParameterCheck.js":"31","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\DeleteAquariums.js":"32","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Sections\\Inventory.js":"33","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Tables\\InventoryTable.js":"34"},{"size":219,"mtime":1608703900292,"results":"35","hashOfConfig":"36"},{"size":655,"mtime":1608703992761,"results":"37","hashOfConfig":"36"},{"size":253,"mtime":1608702485463,"results":"38","hashOfConfig":"36"},{"size":399,"mtime":1608702661990,"results":"39","hashOfConfig":"36"},{"size":585,"mtime":1608703549264,"results":"40","hashOfConfig":"36"},{"size":737,"mtime":1608703153348,"results":"41","hashOfConfig":"36"},{"size":1243,"mtime":1609118879094,"results":"42","hashOfConfig":"36"},{"size":254,"mtime":1608702907410,"results":"43","hashOfConfig":"36"},{"size":164,"mtime":1608757237119,"results":"44","hashOfConfig":"36"},{"size":2576,"mtime":1608756458098,"results":"45","hashOfConfig":"36"},{"size":2830,"mtime":1608703795467,"results":"46","hashOfConfig":"36"},{"size":2070,"mtime":1608753850480,"results":"47","hashOfConfig":"36"},{"size":448,"mtime":1608703317367,"results":"48","hashOfConfig":"36"},{"size":1384,"mtime":1608703838437,"results":"49","hashOfConfig":"36"},{"size":3991,"mtime":1609051842201,"results":"50","hashOfConfig":"36"},{"size":784,"mtime":1609023194555,"results":"51","hashOfConfig":"36"},{"size":2432,"mtime":1609048770294,"results":"52","hashOfConfig":"36"},{"size":1175,"mtime":1609053753549,"results":"53","hashOfConfig":"36"},{"size":1465,"mtime":1608851288260,"results":"54","hashOfConfig":"36"},{"size":2511,"mtime":1608850661011,"results":"55","hashOfConfig":"36"},{"size":94,"mtime":1608702494040,"results":"56","hashOfConfig":"36"},{"size":2403,"mtime":1608795424518,"results":"57","hashOfConfig":"36"},{"size":1582,"mtime":1608848551878,"results":"58","hashOfConfig":"36"},{"size":1194,"mtime":1608850335762,"results":"59","hashOfConfig":"36"},{"size":2813,"mtime":1608851226549,"results":"60","hashOfConfig":"36"},{"size":980,"mtime":1608872799159,"results":"61","hashOfConfig":"36"},{"size":3573,"mtime":1609120549176,"results":"62","hashOfConfig":"36"},{"size":462,"mtime":1608872713560,"results":"63","hashOfConfig":"36"},{"size":1724,"mtime":1609047471482,"results":"64","hashOfConfig":"36"},{"size":2311,"mtime":1609048387757,"results":"65","hashOfConfig":"36"},{"size":3971,"mtime":1609049884346,"results":"66","hashOfConfig":"36"},{"size":2147,"mtime":1609054057819,"results":"67","hashOfConfig":"36"},{"size":2349,"mtime":1609124792990,"results":"68","hashOfConfig":"36"},{"size":691,"mtime":1609124736836,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"jm1eg0",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\index.js",[],["149","150"],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\App.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\utils\\setAuthToken.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\store.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\routing\\Routing.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\routing\\PrivateRoute.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\pages\\Dashboard\\Dashboard.js",["151"],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\pages\\Auth\\UserAuth.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\reducers\\index.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Auth\\Login.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Auth\\Register.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\actions\\auth.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\constants\\auth.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\reducers\\auth.js",["152"],"import {\r\n  REGISTER_START,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_START,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  AUTH_ERROR,\r\n  USER_LOADED,\r\n  LOGOUT,\r\n} from \"../constants/auth\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: false,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_START:\r\n    case LOGIN_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n\r\n    case REGISTER_FAIL:\r\n    case LOGIN_FAIL:\r\n    case AUTH_ERROR:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        user: payload,\r\n      };\r\n\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"user\");\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\actions\\aquariums.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\constants\\aquariums.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\redux\\reducers\\aquariums.js",["153"],"import {\r\n  START_REQUEST,\r\n  REQUEST_FAILED,\r\n  GET_AQUARIUMS,\r\n  ADD_AQUARIUM,\r\n  ADD_LIVESTOCK,\r\n  ADD_PLANT,\r\n  EDIT_AQUARIUM,\r\n  ADD_MAINTENANCE_EVENT,\r\n} from \"../constants/aquariums\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  general: [],\r\n  livestock: {},\r\n  plants: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case START_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case GET_AQUARIUMS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        loading: false,\r\n      };\r\n    case REQUEST_FAILED: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    }\r\n    case ADD_AQUARIUM: {\r\n      console.log(payload);\r\n      return {\r\n        ...state,\r\n        general: [payload.data, ...state.general],\r\n        livestock: { ...state.livestock, [payload.data._id]: [] },\r\n        plants: { ...state.plants, [payload.data._id]: [] },\r\n      };\r\n    }\r\n    case EDIT_AQUARIUM: {\r\n      const updateIndex = state.general\r\n        .map((item) => item._id)\r\n        .indexOf(payload.data._id);\r\n\r\n      console.log({ updateIndex });\r\n      console.log({ payload });\r\n      return {\r\n        ...state,\r\n        general: [\r\n          ...state.general.slice(0, updateIndex),\r\n          { ...state.general[updateIndex], ...payload.data },\r\n          ...state.general.slice(updateIndex + 1),\r\n        ],\r\n      };\r\n    }\r\n    case ADD_LIVESTOCK: {\r\n      return {\r\n        ...state,\r\n        livestock: {\r\n          ...state.livestock,\r\n          [payload._id]: [payload.data, ...state.livestock[payload._id]],\r\n        },\r\n      };\r\n    }\r\n    case ADD_PLANT: {\r\n      return {\r\n        ...state,\r\n        plants: {\r\n          ...state.plants,\r\n          [payload._id]: [payload.data, ...state.plants[payload._id]],\r\n        },\r\n      };\r\n    }\r\n    case ADD_MAINTENANCE_EVENT: {\r\n      const updateIndex = state.general\r\n        .map((item) => item._id)\r\n        .indexOf(payload._id);\r\n\r\n      console.log(updateIndex);\r\n      return {\r\n        ...state,\r\n        general: [\r\n          ...state.general.slice(0, updateIndex),\r\n          {\r\n            ...state.general[updateIndex],\r\n            [payload.property]: payload.data.createdAt,\r\n          },\r\n          ...state.general.slice(updateIndex + 1),\r\n        ],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Cards\\AquariumCard.js",["154"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport Inventory from \"./Card-Sections/Inventory\";\r\nimport EditAquarium from \"../Modals/EditAquarium\";\r\nimport DeleteAquariums from \"../Modals/DeleteAquariums\";\r\n\r\nconst AquariumCard = ({ aquarium, livestock, plants }) => {\r\n  return (\r\n    <Col md={{ span: 4 }}>\r\n      <Card>\r\n        <Card.Header>\r\n          <Card.Title>\r\n            {aquarium.name} <EditAquarium aquarium={aquarium} />{\" \"}\r\n            <DeleteAquariums aquarium={aquarium} />\r\n          </Card.Title>\r\n          <Card.Subtitle></Card.Subtitle>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Card.Subtitle>Size</Card.Subtitle>\r\n          <Card.Text>{aquarium.size} gallons</Card.Text>\r\n          <Inventory\r\n            type=\"livestock\"\r\n            data={livestock}\r\n            aquariumId={aquarium._id}\r\n          />\r\n          <Inventory type=\"plants\" data={plants} aquariumId={aquarium._id} />\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nAquariumCard.propTypes = {};\r\n\r\nexport default connect(null, {})(AquariumCard);\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Cards\\Card-Sections\\Inventory.js",["155","156"],"import React from \"react\";\r\nimport { Button, Badge, Card } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport AddInventory from \"../../Modals/AddInventory\";\r\nimport { addLivestock, addPlant } from \"../../../redux/actions/aquariums\";\r\nimport PropTypes from \"prop-types\";\r\nimport InventoryItemDetails from \"../../Modals/InventoryItemDetails\";\r\n\r\nconst Inventory = ({ type, data, addLivestock, addPlant, aquariumId }) => {\r\n  console.log(type, data);\r\n  let variant;\r\n\r\n  if (type === \"livestock\") {\r\n    variant = \"primary\";\r\n  } else {\r\n    variant = \"success\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {data && (\r\n        <>\r\n          <Card.Subtitle>\r\n            {type}{\" \"}\r\n            <AddInventory\r\n              aquariumId={aquariumId}\r\n              property={type}\r\n              submit={type === \"livestock\" ? addLivestock : addPlant}\r\n            />\r\n          </Card.Subtitle>\r\n          {data.length === 0 ? (\r\n            <>No {type}</>\r\n          ) : (\r\n            data.map((item) => (\r\n              <InventoryItemDetails\r\n                key={item._id}\r\n                item={item}\r\n                btnvariant={variant}\r\n                type={type}\r\n              />\r\n            ))\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nInventory.propTypes = {\r\n  addLivestock: PropTypes.func.isRequired,\r\n  addPlant: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addLivestock, addPlant })(Inventory);\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddAquarium.js",["157"],"import React, { useState } from \"react\";\r\nimport { Modal, Form, Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddAquarium = ({ addAquarium }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    size: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addAquarium(formData);\r\n    handleClose();\r\n  };\r\n  const changeHandler = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const { name, size, description } = formData;\r\n  return (\r\n    <>\r\n      <Button\r\n        size=\"sm\"\r\n        variant=\"outline-primary\r\n      \"\r\n        onClick={handleShow}\r\n      >\r\n        Add <i className=\"fas fa-plus-circle\"></i>\r\n      </Button>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Aquarium</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={(e) => handleSubmit(e)}>\r\n            <Form.Group controlId={`addAquariumName`}>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter name for this aquarium\"\r\n                value={name}\r\n                onChange={(e) => changeHandler(e)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId={`addAquariumSize`}>\r\n              <Form.Label>Size</Form.Label>\r\n              <Form.Control\r\n                name=\"size\"\r\n                placeholder=\"Enter size in gallons\"\r\n                type=\"text\"\r\n                value={size}\r\n                onChange={(e) => changeHandler(e)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId={`addAquariumDescription`}>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                name=\"description\"\r\n                placeholder=\"Enter description\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                value={description}\r\n                onChange={(e) => changeHandler(e)}\r\n              />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save Changes\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddAquarium;\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\utils\\jsonHeader.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddInventory.js",["158","159"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Modal, Form, Card, Button } from \"react-bootstrap\";\r\n\r\nconst AddInventory = ({ aquariumId, submit, property }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    quantity: 1,\r\n  });\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const { name, description, quantity } = formData;\r\n\r\n  const changeHandler = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    handleClose();\r\n    submit(aquariumId, formData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span onClick={handleShow}>+</span>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add {property}</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Form onSubmit={(e) => submitHandler(e)}>\r\n            <Form.Group controlId={`add${property}Name`}>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => changeHandler(e)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId={`add${property}Quantity`}>\r\n              <Form.Label>Quantity</Form.Label>\r\n              <Form.Control\r\n                name=\"quantity\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Quantity\"\r\n                value={quantity}\r\n                onChange={(e) => changeHandler(e)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId={`add${property}SciName`}>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                name=\"description\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                placeholder=\"Description\"\r\n                onChange={(e) => changeHandler(e)}\r\n                value={description}\r\n              />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Add\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddInventory;\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\InventoryItemDetails.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Sections\\AquariumsGeneral.js",["160"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport AquariumCard from \"../Cards/AquariumCard\";\r\nimport AddAquarium from \"../Modals/AddAquarium\";\r\n\r\nimport { addAquarium, editAquarium } from \"../../redux/actions/aquariums\";\r\n\r\nconst AquariumsGeneral = ({\r\n  aquariums,\r\n  livestock,\r\n  plants,\r\n  addAquarium,\r\n  loading,\r\n}) => {\r\n  return (\r\n    <>\r\n      <h2>\r\n        Aquariums <AddAquarium addAquarium={addAquarium} />\r\n      </h2>\r\n      {loading ? (\r\n        \"loading\"\r\n      ) : (\r\n        <Row>\r\n          {aquariums &&\r\n            aquariums.map((aquarium) => (\r\n              <AquariumCard\r\n                key={aquarium._id}\r\n                aquarium={aquarium}\r\n                livestock={livestock[aquarium._id]}\r\n                plants={plants[aquarium._id]}\r\n              />\r\n            ))}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  aquariums: state.aquariums.general,\r\n  livestock: state.aquariums.livestock,\r\n  plants: state.aquariums.plants,\r\n  loading: state.aquariums.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addAquarium })(AquariumsGeneral);\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\EditAquarium.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Sections\\Maintenance.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Cards\\MaintenanceCard.js",["161"],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Notifications\\MaintenanceWarning.js",[],["162","163"],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddMaintenance.js",["164"],"import React, { useState } from \"react\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport { addMaintenanceEvent } from \"../../redux/actions/aquariums\";\r\nconst AddGenMaintenance = ({ addMaintenanceEvent, aquariumId }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    description: \"\",\r\n  });\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const { description } = formData;\r\n\r\n  const changeHandler = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    handleClose();\r\n    addMaintenanceEvent(aquariumId, formData, \"maintenanceTasks\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleShow}>\r\n        <i className=\"fas fa-hand-sparkles\"></i>\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Maintenance</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Form onSubmit={(e) => submitHandler(e)}>\r\n            <Form.Group controlId={`addMaintenanceDescription`}>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                name=\"name\"\r\n                as=\"textarea\"\r\n                placeholder=\"Describe what you did...\"\r\n                value={description}\r\n                onChange={(e) => changeHandler(e)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Add\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddGenMaintenance;\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddWaterchange.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\AddParameterCheck.js",["165"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\n\r\nconst AddParameterCheck = ({ addMaintenanceEvent, aquariumId }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    ammonia: \"\",\r\n    nitrate: \"\",\r\n    nitrite: \"\",\r\n    pH: \"\",\r\n    notes: \"\",\r\n  });\r\n\r\n  const ammoniaOptions = [0, 0.25, 0.5, 1.0, 2.0, 4.0, 8.0];\r\n  const nitrateOptions = [0, 5, 10, 20, 40, 80, 160];\r\n  const nitriteOptions = [0, 0.25, 0.5, 1.0, 2.0, 5.0];\r\n  const pH_Options = [\r\n    6.0,\r\n    6.4,\r\n    6.6,\r\n    6.8,\r\n    7.0,\r\n    7.2,\r\n    7.4,\r\n    7.6,\r\n    7.8,\r\n    8.0,\r\n    8.2,\r\n    8.4,\r\n    8.8,\r\n  ];\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const { ammonia, nitrate, nitrite, pH, notes } = formData;\r\n\r\n  const changeHandler = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    handleClose();\r\n    addMaintenanceEvent(aquariumId, formData, \"parameters\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleShow}>\r\n        <i className=\"fas fa-vial\"></i>\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Parameter Check</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Form onSubmit={(e) => submitHandler(e)}>\r\n            <Form.Group controlId={`addAmmonia`}>\r\n              <Form.Label>Ammonia</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                name=\"ammonia\"\r\n                value={ammonia}\r\n                onChange={(e) => changeHandler(e)}\r\n              >\r\n                <option></option>\r\n                {ammoniaOptions.map((option) => (\r\n                  <option key={`ammonia${option}`} value={option}>\r\n                    {option}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId={`addNitrate`}>\r\n              <Form.Label>Nitrate</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                name=\"nitrate\"\r\n                value={nitrate}\r\n                onChange={(e) => changeHandler(e)}\r\n              >\r\n                <option></option>\r\n                {nitrateOptions.map((option) => (\r\n                  <option key={`nitrate${option}`} value={option}>\r\n                    {option}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId={`addNitrite`}>\r\n              <Form.Label>Nitrite</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                name=\"nitrite\"\r\n                value={nitrite}\r\n                onChange={(e) => changeHandler(e)}\r\n              >\r\n                <option></option>\r\n                {nitriteOptions.map((option) => (\r\n                  <option key={`nitrite${option}`} value={option}>\r\n                    {option}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId={`addpH`}>\r\n              <Form.Label>pH</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={pH}\r\n                name=\"pH\"\r\n                onChange={(e) => changeHandler(e)}\r\n              >\r\n                <option></option>\r\n                {pH_Options.map((option) => (\r\n                  <option key={`pH${option}`} value={option}>\r\n                    {option}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Add\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddParameterCheck;\r\n","C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Modals\\DeleteAquariums.js",[],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Sections\\Inventory.js",["166","167","168"],"C:\\Users\\HP\\Desktop\\github\\aquatrack-front-end\\src\\components\\Tables\\InventoryTable.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":16,"column":6,"nodeType":"175","endLine":16,"endColumn":8,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":20,"column":1,"nodeType":"179","endLine":70,"endColumn":2},{"ruleId":"177","severity":1,"message":"178","line":19,"column":1,"nodeType":"179","endLine":104,"endColumn":2},{"ruleId":"180","severity":1,"message":"181","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":17},{"ruleId":"180","severity":1,"message":"184","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":16},{"ruleId":"180","severity":1,"message":"185","line":2,"column":18,"nodeType":"182","messageId":"183","endLine":2,"endColumn":23},{"ruleId":"180","severity":1,"message":"181","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":17},{"ruleId":"180","severity":1,"message":"181","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":17},{"ruleId":"180","severity":1,"message":"186","line":3,"column":23,"nodeType":"182","messageId":"183","endLine":3,"endColumn":27},{"ruleId":"180","severity":1,"message":"187","line":7,"column":23,"nodeType":"182","messageId":"183","endLine":7,"endColumn":35},{"ruleId":"180","severity":1,"message":"188","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"169","replacedBy":"189"},{"ruleId":"171","replacedBy":"190"},{"ruleId":"180","severity":1,"message":"191","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":29},{"ruleId":"180","severity":1,"message":"192","line":36,"column":42,"nodeType":"182","messageId":"183","endLine":36,"endColumn":47},{"ruleId":"180","severity":1,"message":"188","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"180","severity":1,"message":"186","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":14},{"ruleId":"180","severity":1,"message":"193","line":3,"column":36,"nodeType":"182","messageId":"183","endLine":3,"endColumn":41},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAquariums'. Either include it or remove the dependency array. If 'getAquariums' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["196"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Badge' is defined but never used.","'Card' is defined but never used.","'editAquarium' is defined but never used.","'useState' is defined but never used.",["194"],["195"],"'addMaintenanceEvent' is defined but never used.","'notes' is assigned a value but never used.","'Table' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},"Update the dependencies array to be: [getAquariums]",{"range":"199","text":"200"},[609,611],"[getAquariums]"]